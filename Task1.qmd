---
title: "Task1"
author: "Diana Shchuka"
format: 
  html:
    embed-resources: true
editor: source
---

1. Create variables with all atomic types.

```{r}
# Character type
char_var <- "Hello, Ukraine!"

# Numeric type (floating-point)
num_var <- 07.10

# Integer type
int_var <- 20L  # The 'L' suffix forces the value to be an integer

# Complex type
complex_var <- 3 + 2i  # 'i' represents the imaginary part

# Logical type (boolean)
logical_var <- TRUE

# Print variables to the console
print(char_var)
print(num_var)
print(int_var)
print(complex_var)
print(logical_var)
```

2. Create the next vectors:

- sequence from 5 to 75;
- numbers: 3.14, 2.71, 0, 13;
- with 100 TRUE values.

```{r}
# Sequence from 5 to 75
sequence_vector <- 5:75

# Vector with numbers 3.14, 2.71, 0, and 13
number_vector <- c(3.14, 2.71, 0, 13)

# Vector with 100 TRUE values
true_vector <- rep(TRUE, 100)

# Print vectors
print(sequence_vector)
print(number_vector)
print(true_vector)
```

3. Create the next matrix:
12	34	87
-12	-12.1	0
3.6	0.5	1.3

```{r}
# Create the matrix with the given values
matrix_data <- matrix(c(12, 34, 87, -12, -12.1, 0, 3.6, 0.5, 1.3), nrow = 3, byrow = TRUE)

# Print the matrix
print(matrix_data)
```

4. Create a list with all atomic types.

```{r}
# Create a list with all atomic types
atomic_list <- list(
  char_var = "Hello, Ukraine!",  # Character type
  num_var = 07.10,               # Numeric type (floating-point)
  int_var = 20L,                 # Integer type
  complex_var = 3 + 2i,          # Complex type
  logical_var = TRUE             # Logical type
)

# Print the list
print(atomic_list)
```

5. Create a factor with 3 levels: infant, child, adult.

```{r}
# Create a factor with 3 levels: infant, child, adult
age_group <- factor(c("infant", "child", "adult", "child", "adult", "infant"),
                    levels = c("infant", "child", "adult"))

# Print the factor
print(age_group)

# Print the levels of the factor
print(levels(age_group))
```

6. Create a data frame.

```{r}
# Create a data frame with 3 columns: Name, Age, and Gender
data_frame_example <- data.frame(
  N = c("Diana", "Kate", "Max", "Richard"),   # Character column
  A = c(20, 19, 28, 32),                   # Numeric column
  G = c("Female", "Female", "Male", "Male")  # Character column
)

# Print the data frame
print(data_frame_example)
```

7. Change column names of the data frame.

```{r}
# Change column names of the data frame
colnames(data_frame_example) <- c("Name", "Age", "Gender")

# Print the data frame with new column names
print(data_frame_example)
```

